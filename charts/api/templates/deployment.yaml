{{- $fullName := include "api.fullname" . -}}
{{- $apiPortRange := 15170 -}}
{{- $redisPortRange := 14620 -}}
{{- $workerPortRange := 13680 -}}
{{- $workerRedisPortRange := 12260 -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $fullName }}-nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-proxy-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          {{- if (.Values.nginx).resources }}
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          {{- end }}
        {{- range $index, $endpoint := .Values.endpoints }}
          {{- $name := (printf "%s-%s" $fullName .name) }}
          {{- $apiPort := (add $apiPortRange $index) }}
          {{- $redisPort := (add $redisPortRange $index) }}
          {{- $workerPort := (add $workerPortRange $index) }}
          {{- $workerRedisPort := (add $workerRedisPortRange $index) }}
        - name: {{ $name }}
          {{- if .securityContext }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .image.repository }}:{{ .image.tag | default "latest" }}"
          imagePullPolicy: {{ .image.pullPolicy | default "Always" }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
          env:
            - name: API_PORT 
              value: "{{ $apiPort }}"
          {{- if .worker }}
            - name: WORKER_PORT 
              value: "{{ $workerPort }}"
          {{- end }}
          {{- with .redis }}
            - name: REDIS_HOST
              value: "localhost"
            - name: REDIS_PORT
              value: {{ $redisPort | quote }}
            - name: REDIS_DB
              value: {{ .db | default "0" | quote }}
          {{- end }}
          {{- if .env }}
            {{- toYaml .env | nindent 12 }}
          {{- end }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12  }}
          {{- end }}
          {{- if .args }}
          args:
            {{- toYaml .args | nindent 12  }}
          {{- end }}
      {{- with .redis }}
        - name: {{ $name }}-redis
          image: "redis:7"
          ports:
            - containerPort: {{ add $index 14620 }}
          env:
            - name: MASTER
              value: "true"
          command: ["redis-server"]
          args: ["--port", {{ $redisPort | quote }}]
          volumeMounts:
          - mountPath: /redis-master-data
            name: {{ $name }}-redis-data
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
      {{- end}}
      {{- with .worker }}
        {{- $workerFullName := (printf "%s-%s" $name (.name | default "worker")) }}
        - name: {{ $workerFullName }}
          image: "{{ .image.repository }}:{{ .image.tag | default "latest" }}"
          {{- if .securityContext }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
          env:
            - name: WORKER_PORT 
              value: {{ $workerPort | quote }}
          {{- with .redis }}
            - name: REDIS_HOST
              value: "localhost"
            - name: REDIS_PORT
              value: {{ $workerRedisPort | quote }}
            - name: REDIS_DB
              value: {{ .db | default "0" | quote }}
          {{- end }}
          {{- if .env }}
            {{- toYaml .env | nindent 12 }}
          {{- end }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12  }}
          {{- end }}
          {{- if .args }}
          args:
            {{- toYaml .args | nindent 12  }}
          {{- end }}
      {{- with .redis }}
        - name: {{ $workerFullName }}-redis
          image: "redis:7"
          ports:
            - containerPort: {{ $workerRedisPort }}
          env:
            - name: MASTER
              value: "true"
          command: ["redis-server"]
          args: ["--port", {{ $workerRedisPort | quote }}]
          volumeMounts:
            - mountPath: /redis-master-data
              name: {{ $workerFullName }}-redis-data
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
      {{- end}}
      {{- end}}
      {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: nginx-proxy-config-volume
          configMap:
            name: {{ $fullName }}-nginx-conf
      {{- range $index, $endpoint := .Values.endpoints }}
        {{- $name := (printf "%s-%s" $fullName .name) }}

        {{- if .redis }}
        - name: {{ $name }}-redis-data
          emptyDir: {}
        {{- end }}

        {{- with .worker }}
          {{- $workerFullName := (printf "%s-%s" $name (.name | default "worker")) }}

          {{- if .redis }}
        - name: {{ $workerFullName }}-redis-data
          emptyDir: {}
          {{- end }}
        {{- end }}
      {{- end }}
